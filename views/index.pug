extends ../node_modules/pug-bootstrap/_bootstrap
append body
 .container
  h1 Emergency Node Server API
  h2 Documentation API

  h3 Access to USER

  h4 Get all user
  p  method : GET 
  code url : http://rest.nomadi.fr/user

  h4 Post a new user with data json
  p method : POST
  code http://rest.nomadi.fr/users/id
  p json to send (example): 
  code { "nameUser": "Soungue","loginUser": "Sam Soungue", "firstnameUser": "Sam", "birthdateUser": "2001-02-02T23:00:00.000Z", "passwordUser": "inburnwetrust","emailUser": "sam@soung.ue","phoneUser": "6544548464"}

  h4 Post a data json with user (email) and password
  p method : POST
  code url :  http://rest.nomadi.fr/users/login
  p json to send : 
  code { 'email' : "em@ail", "pwd" : "password"}
  p status received : 
  ul
    li status 0 : Ok user exist
    li status 1 : login failed
    li status 2 : error in db request

  h4 Get specific user from user's id
  p  method : GET 
  code url : http://rest.nomadi.fr/user/5 (5 aka an user'id example )


  h4 Update a specific user
  p method : PUT
  code url : http://rest.nomadi.fr/user/5 (5 aka an user'id example )
  p json to send with one or all the keys (example): 
  code { "nameUser": "Soungue","loginUser": "Sam Soungue", "firstnameUser": "Sam", "birthdateUser": "2001-02-02T23:00:00.000Z", "passwordUser": "inburnwetrust","emailUser": "sam@soung.ue","phoneUser": "6544548464"}

  h4 Delete a specific user
  p method : DELETE 
  code url : http://rest.nomadi.fr/user/5 (5 aka an user'id example )

  h3 Access to ITEM
  h4 http://url/items
  p Get all items
  p Post a new item
  h4 http://url/items/id
  p Get a specific item 
  p Put and update a specific item
  p Delete a specific item 

  h3 Access to Uploads
  h4 Upload an image
  form(method='POST' enctype='multipart/form-data' action='/upload')
   div
    input(type='text' name='title')
   div
    input(multiple='multiple' name='upload' type='file')
   button(type='submit') Envoyer

  h4 Retrieve file uploaded
  p http://url/uploads/filename
  p to autoresize use http://url/uploads/filename?dim=100 for 100 pixels wide
  p thumbnails are stored in .cache directory
  p need to have imagemagick installed
